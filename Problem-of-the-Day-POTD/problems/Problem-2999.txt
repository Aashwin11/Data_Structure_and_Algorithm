class Solution {
public:

    long long solve(string& str, int limit ,string& s)
    {
        if(str.length()<s.length()) return 0;

        long long count=0;

        string remainingString=str.substr(str.length() -s.length()); //"00"
        //"3000" -4
        //"12" -2    [4-2=2]

        int remainL=str.length()-s.length(); 

        for(int i=0;i<remainL;i++)
        {
            int digit=str[i]-'0';

            if(digit<=limit)
            {
                count+=digit*pow(limit+1,remainL-i-1);
            }
            else
            {
                count+=pow(limit+1,remainL-i);
                return count;
            }
        }

        if(remainingString>=s)
        {
            count+=1;
        }

return count;





    }
    long long numberOfPowerfulInt(long long start, long long finish, int limit, string s) {

        string startStr=to_string(start-1);
        string finishStr=to_string(finish);

        return solve(finishStr,limit,s)-solve(startStr,limit,s);


        
    }
};
